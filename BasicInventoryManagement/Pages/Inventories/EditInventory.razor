@page "/editinventory/{InvId:int}"

@inject IViewInventoryById GetId

@inject IEditInvetory Edit

@inject NavigationManager NavigationManager

<h3>EditInventory</h3>
<br />

<EditForm Model="inventory" OnValidSubmit="SaveInventory">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="name">Inventory Name</label>
        <InputText id="name" @bind-Value="inventory.InventoryName" class="form-control"></InputText>
    </div>

    <div class="form-group">
        <label for="quantity">Inventory Quantity</label>
        <InputNumber id="quantity" @bind-Value="inventory.Quantity" class="form-control"></InputNumber>
    </div>

    <div class="form-group">
        <label for="price">Inventory Price</label>
        <InputNumber id="price" @bind-Value="inventory.Price" class="form-control"></InputNumber>
    </div>
    <br />

    <button type="submit" class="btn btn-success">Save</button>
    <button type="button" class="btn btn-primary" @onclick="Cancel" >Cancel</button>
</EditForm>

@code {

    [Parameter]
    public int InvId { get; set; }

    private Inventory inventory = new Inventory();

    protected override async Task OnParametersSetAsync()
    {
        inventory = await GetId.ExecuteAsync(InvId);
    }

    private async Task SaveInventory()
    {
        await Edit.ExecuteAsync(inventory);
        NavigationManager.NavigateTo("/inventories");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/inventories");
    }

}
